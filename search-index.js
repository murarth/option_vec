var searchIndex = {};
searchIndex["option_vec"] = {"doc":"`OptionVec<T>`; an abstraction over `Vec<Option<T>>`","items":[[3,"OptionVec","option_vec","An abstraction over `Vec<Option<T>>`",null,null],[3,"IntoIter","","An owned iterator of `OptionVec<T>` elements.",null,null],[3,"Iter","","An iterator of borrowed `OptionVec<T>` elements.",null,null],[3,"IterMut","","An iterator of mutable `OptionVec<T>` elements.",null,null],[3,"IntoEnumerate","","An enumerated owned iterator of `OptionVec<T>` elements, yielding `(usize, T)`.",null,null],[3,"Enumerate","","An enumerated iterator of borrowed `OptionVec<T>` elements, yielding `(usize, &T)`.",null,null],[3,"EnumerateMut","","An enumerated iterator of mutable `OptionVec<T>` elements, yielding `(usize, &mut T)`.",null,null],[11,"new","","Creates an empty `OptionVec<T>`.",0,{"inputs":[],"output":{"name":"optionvec"}}],[11,"with_capacity","","Creates an empty `OptionVec<T>` with capacity for `n` elements.",0,{"inputs":[{"name":"usize"}],"output":{"name":"optionvec"}}],[11,"inner","","Returns a borrowed reference to the internal `Vec<Option<T>>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"inner_mut","","Returns a mutable reference to the internal `Vec<Option<T>>`.",0,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"capacity","","Returns the allocated capacity for elements.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"len","","Returns the number of contained elements.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether the container is empty.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"insert","","Inserts an element into the first available position, returning the destination position.",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"usize"}}],[11,"remove","","Removes an element from the given position, if one exists.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"reserve","","Reserves capacity for at least `n` more elements.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"reserve_exact","","Reserves capacity for exactly `n` more elements.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"shrink_to_fit","","Shrinks the allocation as much as possible.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"retain","","Retains only elements specified by the predicate.",0,{"inputs":[{"name":"self"},{"name":"f"}],"output":null}],[11,"pop_back","","Removes and returns the last occupied element.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"pop_front","","Removes and returns the first occupied element.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clear","","Removes all contained elements.",0,{"inputs":[{"name":"self"}],"output":null}],[11,"contains","","Returns whether an element exists at the given index.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"get","","Returns an element at the given position.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to an element at the given position.",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"option"}}],[11,"iter","","Returns an iterator over contained elements.",0,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns an iterator over mutable references to contained elements.",0,{"inputs":[{"name":"self"}],"output":{"name":"itermut"}}],[11,"into_enumerate","","Returns an iterator over values with indices.",0,{"inputs":[{"name":"self"}],"output":{"name":"intoenumerate"}}],[11,"enumerate","","Returns an iterator over references with indices.",0,{"inputs":[{"name":"self"}],"output":{"name":"enumerate"}}],[11,"enumerate_mut","","Returns an iterator over mutable references with indices.",0,{"inputs":[{"name":"self"}],"output":{"name":"enumeratemut"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",6,null],[11,"next_back","","",6,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",1,null],[11,"next_back","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",2,null],[11,"next","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",3,null],[11,"next_back","","",3,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"size_hint","","",4,null],[11,"next_back","","",4,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"iter"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"enumerate"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"optionvec"}}],[11,"clone_from","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":null}],[11,"default","","",0,{"inputs":[],"output":{"name":"optionvec"}}],[11,"from","","",0,{"inputs":[{"name":"vec"}],"output":{"name":"optionvec"}}],[11,"into","","",0,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"i"}],"output":null}],[11,"from_iter","","",0,{"inputs":[{"name":"i"}],"output":{"name":"optionvec"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"optionvec"}],"output":{"name":"ordering"}}],[11,"index","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",0,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"t"}}],[11,"into_iter","","",0,{"inputs":[{"name":"self"}],"output":{"name":"intoiter"}}]],"paths":[[3,"OptionVec"],[3,"IterMut"],[3,"IntoEnumerate"],[3,"Enumerate"],[3,"EnumerateMut"],[3,"IntoIter"],[3,"Iter"]]};
initSearch(searchIndex);
